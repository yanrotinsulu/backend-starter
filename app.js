import express from 'express';
import cookieParser from 'cookie-parser';
import bodyParser from 'body-parser';
import session from 'express-session';
import passport from 'passport';

const { json } = bodyParser;
const { initialize, session : _session } = passport;
import passportConfig from './app/configs/passport-config.js';
const { strategy } = passportConfig

const app = express();
const port = 3000;

import userRoute from './app/routes/user.js';
import authRoute from './app/routes/auth.js';
import roleRoute from './app/routes/role.js';
//process.env.root = __dirname;

//import swaggerJsdoc from 'swagger-jsdoc';
//import { serve, setup } from 'swagger-ui-express';

/*
const swaggerOpts = {
    swaggerDefinition: {
        // Like the one described here: https://swagger.io/specification/#infoObject
        info: {
            title: 'Fypr Backend Starter',
            version: '1.0.0',
            description: 'API with autogenerated swagger doc',
        },
        "host": "localhost:3000"
    },
    // List of files to be processes. You can also set globs './routes/*.js'
    apis: ['./app/routes/*.js'],
};

const swaggerSpecs = swaggerJsdoc(swaggerOpts);
const swaggerDocument = require('./swagger.json');
*/

app.use(express.static('public'));
app.disable('x-powered-by');
app.use(cookieParser());
app.use(json({
    limit: '100kb',
}));
app.use(session({ secret: 'FyprBoilerplate', resave: false, saveUninitialized: false, cookie: { secure: false } }));
//TODO app.use(initialize());

/*
switch (strategy) {
    case "local":
        app.use(_session());
        require('./app/configs/passport-local')(passport);
        break;
    default:
        require('./app/configs/passport-jwt')(passport);
        break;
}
*/

switch (strategy) {
    case "local":
        //TODO app.use(_session());
        import('./app/configs/passport-local.js')
            .then(module => module.default(passport))
            .catch(err => console.error('Error loading local passport config:', err));
        break;
    default:
        import('./app/configs/passport-jwt.js')
            .then(module => module.default(passport))
            .catch(err => console.error('Error loading JWT passport config:', err));
        break;
}

app.get('/', (req, res) => res.send('Welcome to Fypr Backend Starter!'))
app.use('/user', userRoute);
app.use('/auth', authRoute);
app.use('/role', roleRoute);

//app.use('/api-docs', serve, setup(swaggerSpecs));

app.use(function (error, request, response, next) {
    console.error(error.stack);
    response.status(400).send(error.message);
});

app.listen(port, () => console.log('Fypr Backend app is running'));